{"version":3,"sources":["utilities/calculators.js","utilities/formatters.js","components/CollapsableWidget.js","components/PropertySummary.jsx","components/PropertySummaries.js","components/FullSummary.js","components/AddProperty.js","../../property/dist/src/fee.js","../../property/dist/src/helpers.js","../../property/dist/src/finance.js","../../property/dist/src/payment.js","../../property/dist/src/rental.js","../../property/dist/src/property.js","App.js","serviceWorker.js","index.js"],"names":["getMonthlyCost","property","rate","finances","calculateMonthlyCostOfFinance","toFixed","getNetIncome","calculateMonthlyIncome","payments","monthlyCost","formatter","Intl","NumberFormat","style","currency","formatCurrency","amount","format","CollapsableWidget","props","state","collapsed","className","onClick","setState","this","heading","renderKeyInfoItems","renderBlurb","children","Object","entries","keyInfoItems","map","key","value","React","Component","PropertySummary","line1","name","calculateMonthlyCost","line2","teaserRate","push","calculateMonthlyProfit","para1","join","span1","href","target","rel","span2","para2","removePropertyHandler","index","mortgageCost","monthlyTeaserCostOfFinance","profit","monthlyCostOfFinance","keyInfo","renderDeleteButton","PropertySummaries","properties","FullSummary","teaserTotal","forEach","total","parseFloat","incomeTotal","reduce","getPropertyCurrentTotal","getPropertyFullTotal","getPropertyCurrentIncome","getPropertyProperIncome","getPropertyTotal","getNetIncomeTotal","length","properProfit","properMortgageCost","getTotalMortgageDebt","AddProperty","getInitialFormState","handleInputChange","bind","handleSubmit","interestOnly","mortgage","baseRate","monthsLeft","rent","fee","expenses","event","type","checked","preventDefault","addPropertyHandler","Fragment","onSubmit","onChange","placeholder","required","step","min","disabled","id","Fee","json","create","prototype","assign","round","Math","Number","EPSILON","Finance","repayment","fees","feeCosts","calculateYearlyCostOfFinance","monthlyInterestRate","pow","calculateTotalCostOfFinance","_a","finance","feeObject","fromJson","Payment","interval","calculateYearlyCost","payment","Rental","monthlyRent","lettingFee","rental","Property","rentals","useTeaserRate","financeCosts","paymentCosts","monthlyIncome","financeObject","paymentObject","rentalObject","App","storageKey","defaultValue","initialProperties","localStorage","getItem","JSON","parse","undefined","alert","income","updatePropertySchema","useState","setter","useEffect","setItem","stringify","useStateWithLocalStorage","setProperties","newProperties","splice","formState","parseInt","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.48830116.chunk.js","sourcesContent":["const getMonthlyCost = (property, rate) => {\n  return property.finances[0].calculateMonthlyCostOfFinance(rate).toFixed(2);\n};\n\nconst getNetIncome = (property, rate) => {\n  return +(property.calculateMonthlyIncome() - getMonthlyCost(property, rate) - property.payments[0].monthlyCost).toFixed(2);\n};\n\nexport {\n  getMonthlyCost,\n  getNetIncome\n};\n","const formatter = new Intl.NumberFormat('en-GB', {style: 'currency', currency: 'GBP'});\nconst formatCurrency = amount => {\n  return formatter.format(amount)\n};\n\nexport {\n  formatCurrency\n};\n","import React from 'react';\n\nclass CollapsableWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {collapsed: true};\n  }\n\n  render() {\n    return (\n      <div className='collapsable'>\n        <h2 className='collapsable-toggle title is-3' onClick={() => this.setState(state => ({collapsed: !state.collapsed}))}>{this.props.heading}</h2>\n        <div className='collapsable-key-info collapsable-toggle' onClick={() => this.setState(state => ({collapsed: !state.collapsed}))}>\n          {this.renderKeyInfoItems()}\n        </div>\n        {this.renderBlurb()}\n      </div>\n    );\n  }\n\n  renderBlurb() {\n    if (!this.state.collapsed) {\n      return this.props.children;\n    }\n  }\n\n  renderKeyInfoItems() {\n    return Object.entries(this.props.keyInfoItems).map(([key, value]) => {\n      return <div key={`${this.props.heading}-${key}`}><span className='collapsable-key-info-label'>{key}:</span> {value}</div>;\n    });\n  }\n}\n\nexport default CollapsableWidget;\n\n","import React from 'react';\nimport { getMonthlyCost, getNetIncome } from '../utilities/calculators';\nimport { formatCurrency } from '../utilities/formatters';\nimport CollapsableWidget from \"./CollapsableWidget\";\n\nclass PropertySummary extends React.Component {\n  renderBlurb() {\n    const line1 = [`The mortgage for ${this.props.property.name} currently costs around ${formatCurrency(this.props.property.calculateMonthlyCost(true))} each month.`];\n    const line2 = [`After mortgage repayments, your current income from the property is around ${formatCurrency(this.props.property.calculateMonthlyIncome())} each month.`];\n\n    if (this.props.property.finances[0].teaserRate) {\n      line1.push(`When the teaser rate expires, it is expected that this will rise to ${formatCurrency(this.props.property.calculateMonthlyCost())}, ${formatCurrency(this.props.property.calculateMonthlyCost() - this.props.property.calculateMonthlyCost())} more than your current repayments.`);\n      line2.push(`When the teaser rate expires that will be nearer to ${formatCurrency(this.props.property.calculateMonthlyProfit())}.`);\n    }\n    const para1 = <p className='summary-line'>{line1.join(' ')}<br/>{line2.join(' ')}</p>;\n\n    if (this.props.property.finances[0].rate >= 15) {\n      return para1;\n    }\n\n    let span1 = null;\n    if (this.props.property.finances[0].rate < 10) {\n      span1 = <>\n        <span>If interest rates were to rise to 10% (<a\n          href=\"https://www.purecommercialfinance.co.uk/news/a-brief-history-of-average-mortgage-interest-rates/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">similar to rates around 1995</a>), then the mortgage would cost {formatCurrency(getMonthlyCost(this.props.property, 10))} each month, {formatCurrency(getMonthlyCost(this.props.property, 10) - this.props.property.calculateMonthlyCost(true))} more that your current repayments. If rates were this high, your monthly income will be nearer to {formatCurrency(getNetIncome(this.props.property, 10))}.</span>\n        <br/>\n      </>;\n    }\n    const span2 = <span>If interest rates were to rise to 15% (<a href=\"https://www.purecommercialfinance.co.uk/news/a-brief-history-of-average-mortgage-interest-rates/\" target=\"_blank\" rel=\"noopener noreferrer\">similar to rates around 1980</a>), then the mortgage would cost {formatCurrency(getMonthlyCost(this.props.property, 15))} each month, {formatCurrency(getMonthlyCost(this.props.property, 15) - this.props.property.calculateMonthlyCost(true))} more that your current repayments. If rates were this high, your monthly income will be nearer to {formatCurrency(getNetIncome(this.props.property, 15))}.</span>;\n    const para2 = <p className='summary-line'>{span1}{span2}</p>;\n\n    return <>{para1}{para2}</>;\n  }\n\n  renderDeleteButton() {\n    return <button className='remove-property' onClick={() => this.props.removePropertyHandler(this.props.index)}>Remove\n      Property</button>;\n  }\n\n  render() {\n    let mortgageCost = formatCurrency(this.props.property.finances[0].monthlyTeaserCostOfFinance);\n    let profit = formatCurrency(this.props.property.calculateMonthlyProfit(true));\n\n    if (this.props.property.finances[0].teaserRate) {\n      mortgageCost = `${mortgageCost} (${formatCurrency(this.props.property.finances[0].monthlyCostOfFinance)})`;\n      profit = `${profit} (${formatCurrency(this.props.property.calculateMonthlyProfit())})`;\n    }\n\n    const keyInfo = {\n      'Mortgage Cost': `${mortgageCost} per month`,\n      'Income': `${formatCurrency(this.props.property.calculateMonthlyIncome())} per month`,\n      'Post-Mortgage Profit': `${profit} per month`\n    };\n\n    return (\n      <CollapsableWidget heading={this.props.property.name} keyInfoItems={keyInfo}>\n        {this.renderBlurb()}\n        {this.renderDeleteButton()}\n      </CollapsableWidget>\n    );\n  }\n}\n\nexport default PropertySummary;\n","import React from 'react';\nimport PropertySummary from \"./PropertySummary\";\n\nconst PropertySummaries = ({properties, removePropertyHandler}) => (\n  <div>\n    {properties.map((property, index) => (\n      <PropertySummary key={property.name} index={index} property={property} removePropertyHandler={removePropertyHandler}/>\n    ))}\n  </div>\n);\n\nexport default PropertySummaries\n","import React from 'react';\nimport CollapsableWidget from './CollapsableWidget';\nimport { getMonthlyCost, getNetIncome } from '../utilities/calculators';\nimport { formatCurrency } from '../utilities/formatters';\n\nclass FullSummary extends React.Component {\n  getPropertyCurrentTotal() {\n    let teaserTotal = 0;\n    this.props.properties.forEach(property =>  {\n      teaserTotal += property.finances[0].monthlyTeaserCostOfFinance;\n    });\n    return teaserTotal;\n  }\n\n  getPropertyFullTotal() {\n    let total = 0;\n    this.props.properties.forEach(property => {\n      total += property.finances[0].monthlyCostOfFinance;\n    });\n    return total;\n  }\n\n  getPropertyTotal(rate) {\n    let total = 0;\n    this.props.properties.forEach(property => {\n      total += parseFloat(getMonthlyCost(property, rate));\n    });\n    return total;\n  }\n\n  getNetIncomeTotal(rate) {\n    let incomeTotal = 0;\n    this.props.properties.forEach(property => {\n      incomeTotal += getNetIncome(property, rate);\n    });\n    return incomeTotal;\n  }\n\n  getPropertyCurrentIncome() {\n    let incomeTotal = 0;\n    this.props.properties.forEach(property => {\n      incomeTotal += property.calculateMonthlyProfit(true);\n    });\n    return incomeTotal;\n  }\n\n  getPropertyProperIncome() {\n    let incomeTotal = 0;\n    this.props.properties.forEach(property => {\n      incomeTotal += property.calculateMonthlyProfit();\n    });\n    return incomeTotal;\n  }\n\n  getTotalMortgageDebt() {\n    return this.props.properties.reduce((total, property) => property.finances[0].amount + total, 0);\n  }\n\n  renderBlurb() {\n    return (\n      <>\n        <p>\n          Your current monthly payments are around {formatCurrency(this.getPropertyCurrentTotal())}. This will increase to\n          around {formatCurrency(this.getPropertyFullTotal())} (<span\n          className=\"text-warning\">+{formatCurrency(this.getPropertyFullTotal() - this.getPropertyCurrentTotal())}</span>) once\n          any/all teaser rates have expired.<br/>\n          Your monthly net income is around {formatCurrency(this.getPropertyCurrentIncome())}. This will change by {formatCurrency(this.getPropertyProperIncome() - this.getPropertyCurrentIncome())} to around {formatCurrency(this.getPropertyProperIncome())} once any/all teaser rates have expired.\n        </p>\n        <p>\n          <span>If interest rates were to rise to 10%: (<a href=\"https://www.purecommercialfinance.co.uk/news/a-brief-history-of-average-mortgage-interest-rates/\" target=\"_blank\" rel=\"noopener noreferrer\">similar to rates around 1995</a>), then the mortgages would total {formatCurrency(this.getPropertyTotal(10))} each month, {formatCurrency(this.getPropertyTotal(10) - this.getPropertyCurrentTotal())} more that your current repayments. If rates were this high, your monthly income will be nearer to {formatCurrency(this.getNetIncomeTotal(10))}.</span><br/>\n          <span>If interest rates were to rise to 15%: (<a href=\"https://www.purecommercialfinance.co.uk/news/a-brief-history-of-average-mortgage-interest-rates/\" target=\"_blank\" rel=\"noopener noreferrer\">similar to rates around 1980</a>), then the mortgages would total {formatCurrency(this.getPropertyTotal(15))} each month, {formatCurrency(this.getPropertyTotal(15) - this.getPropertyCurrentTotal())} more that your current repayments. If rates were this high, your monthly income will be nearer to {formatCurrency(this.getNetIncomeTotal(15))}.</span>\n        </p>\n        </>\n    );\n  }\n\n  render() {\n    if (this.props.properties.length < 1) {\n      return null;\n    }\n\n    const properProfit = formatCurrency(this.getPropertyProperIncome());\n    let profit = formatCurrency(this.getPropertyCurrentIncome());\n\n    if (profit !== properProfit) {\n      profit = `${profit} (${properProfit})`\n    }\n\n    const properMortgageCost = formatCurrency(this.getPropertyFullTotal());\n    let mortgageCost = formatCurrency(this.getPropertyCurrentTotal());\n\n    if (mortgageCost !== properMortgageCost) {\n      mortgageCost = `${mortgageCost} (${properMortgageCost})`\n    }\n\n    const keyInfo = {\n      'Total Mortgage Debt': formatCurrency(this.getTotalMortgageDebt()),\n      'Mortgage Costs': `${mortgageCost} per month`,\n      'Post-Mortgage Profit': `${profit} per month`\n    };\n\n    return (\n      <CollapsableWidget heading='Summary' keyInfoItems={keyInfo}>\n        {this.renderBlurb()}\n      </CollapsableWidget>\n    );\n  }\n}\n\nexport default FullSummary;\n","import React from 'react';\n\nclass AddProperty extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialFormState();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getInitialFormState() {\n    return {name: '', interestOnly: false, mortgage: '', baseRate: '', monthsLeft: '', teaserRate: '', rent: '', fee: '', expenses: ''};\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({[name]: value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addPropertyHandler(this.state);\n    this.setState(this.getInitialFormState());\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2 className=\"title is-3\">Add a Property</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Property Name</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"name\" value={this.state.name} onChange={this.handleInputChange} placeholder=\"10 Downing Street\" required/>\n                </div>\n                <p className=\"help\">\n                  Give this property a label\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Mortgage amount</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"mortgage\" value={this.state.mortgage} onChange={this.handleInputChange} type=\"number\" placeholder=\"300000\" step=\"any\" min=\"0\" required/>\n                </div>\n                <p className=\"help\">\n                  The outstanding amount of the loan\n                </p>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <label className=\"checkbox\">\n                    <input name=\"interestOnly\" checked={this.state.interestOnly} onChange={this.handleInputChange} type=\"checkbox\"/> Interest only\n                  </label>\n                </div>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"monthsLeft\" value={this.state.monthsLeft} onChange={this.handleInputChange} type=\"number\" placeholder=\"300\" step=\"1\" min=\"0\" disabled={this.state.interestOnly} required={!this.state.interestOnly}/>\n                </div>\n                <p className=\"help\">\n                  Months left on the mortgage\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Rate</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"baseRate\" value={this.state.baseRate} onChange={this.handleInputChange} type=\"number\" placeholder=\"4.95\" step=\"any\" required/>\n                </div>\n                <p className=\"help\">\n                  The interest rate of the loan (ignoring any teaser rate) %\n                </p>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"teaserRate\" value={this.state.teaserRate} onChange={this.handleInputChange} type=\"number\" placeholder=\"2.19\" step=\"any\"/>\n                </div>\n                <p className=\"help\">\n                  Any introductory/teaser rate the loan may have %\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Rent</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"rent\" value={this.state.rent} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"1000\" id=\"rent\" required/>\n                </div>\n                <p className=\"help\">\n                  Monthly rent\n                </p>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"fee\" value={this.state.fee} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"12\" id=\"fee\" required/>\n                </div>\n                <p className=\"help\">\n                  Letting fee %\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Expenses</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"expenses\" value={this.state.expenses} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"110\" id=\"expenses\" required/>\n                </div>\n                <p className=\"help\">\n                  Monthly expenses such as maintenance and service charge\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label\"/>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <button type=\"submit\" className=\"button is-primary\">\n                    Add Property\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddProperty\n","export default class Fee {\n    constructor(amount) {\n        this.amount = amount;\n    }\n    static fromJson(json) {\n        const fee = Object.create(Fee.prototype);\n        return Object.assign(fee, json);\n    }\n}\n","const round = (amount) => {\n    return Math.round((amount + Number.EPSILON) * 100) / 100;\n};\nexport { round };\n","import { round } from './helpers';\nimport Fee from './fee';\nexport default class Finance {\n    constructor(amount, repayment, length, rate, fees, teaserRate) {\n        this.amount = amount;\n        this.repayment = repayment;\n        this.length = length;\n        this.rate = rate;\n        this.fees = fees;\n        this.teaserRate = teaserRate;\n    }\n    get totalCostOfFinance() {\n        return round(this.calculateTotalCostOfFinance());\n    }\n    get totalOneOffCosts() {\n        return this.fees.reduce((total, fee) => fee.amount + total, 0);\n    }\n    get monthlyCostOfFinance() {\n        return round(this.calculateMonthlyCostOfFinance(this.rate));\n    }\n    get monthlyTeaserCostOfFinance() {\n        var _a;\n        return round(this.calculateMonthlyCostOfFinance((_a = this.teaserRate) !== null && _a !== void 0 ? _a : this.rate));\n    }\n    get yearlyCostOfFinance() {\n        return round(this.calculateYearlyCostOfFinance(this.rate));\n    }\n    get yearlyTeaserOfFinance() {\n        var _a;\n        return round(this.calculateYearlyCostOfFinance((_a = this.teaserRate) !== null && _a !== void 0 ? _a : this.rate));\n    }\n    calculateTotalCostOfFinance() {\n        const feeCosts = this.fees.reduce((total, fee) => fee.amount + total, 0);\n        if (this.repayment) {\n            return this.calculateYearlyCostOfFinance(this.rate) * this.length + feeCosts;\n        }\n        return this.amount + this.calculateYearlyCostOfFinance(this.rate) * this.length + feeCosts;\n    }\n    calculateYearlyCostOfFinance(rate) {\n        return this.calculateMonthlyCostOfFinance(rate) * 12;\n    }\n    calculateMonthlyCostOfFinance(rate) {\n        const monthlyInterestRate = rate / 12 / 100;\n        if (!this.repayment) {\n            return this.amount * monthlyInterestRate;\n        }\n        const monthsLeft = this.length * 12;\n        // M = P [ i(1 + i)^n ] / [ (1 + i)^n – 1]\n        const pow = Math.pow((monthlyInterestRate + 1), monthsLeft);\n        return this.amount * ((monthlyInterestRate * pow) / (pow - 1));\n    }\n    static fromJson(json) {\n        const finance = Object.create(Finance.prototype);\n        return Object.assign(finance, json, {\n            fees: json.fees.map((feeObject) => {\n                return Fee.fromJson(feeObject);\n            })\n        });\n    }\n}\n","import { round } from './helpers';\nexport default class Payment {\n    constructor(amount, interval) {\n        this.amount = amount;\n        this.interval = interval;\n    }\n    get monthlyCost() {\n        return round(this.calculateMonthlyCost());\n    }\n    get yearlyCost() {\n        return round(this.calculateYearlyCost());\n    }\n    calculateYearlyCost() {\n        if (this.interval === 'yearly') {\n            return this.amount;\n        }\n        return this.amount * 12;\n    }\n    calculateMonthlyCost() {\n        if (this.interval === 'monthly') {\n            return this.amount;\n        }\n        return this.amount / 12;\n    }\n    static fromJson(json) {\n        const payment = Object.create(Payment.prototype);\n        return Object.assign(payment, json);\n    }\n}\n","import { round } from './helpers';\nexport default class Rental {\n    constructor(monthlyRent, lettingFee) {\n        this.monthlyRent = monthlyRent;\n        this.lettingFee = lettingFee;\n    }\n    get monthlyIncome() {\n        return round(this.monthlyRent - (this.monthlyRent * this.lettingFee / 100));\n    }\n    static fromJson(json) {\n        const rental = Object.create(Rental.prototype);\n        return Object.assign(rental, json);\n    }\n}\n","import Finance from './finance';\nimport Payment from './payment';\nimport Rental from './rental';\nexport default class Property {\n    constructor(name, finances, payments, rentals) {\n        this.name = name;\n        this.finances = finances;\n        this.payments = payments;\n        this.rentals = rentals;\n    }\n    calculateMonthlyCost(useTeaserRate = false) {\n        const financeCosts = this.finances.reduce((total, finance) => (useTeaserRate ? finance.monthlyTeaserCostOfFinance : finance.monthlyCostOfFinance) + total, 0);\n        const paymentCosts = this.payments.reduce((total, payment) => payment.monthlyCost + total, 0);\n        return financeCosts + paymentCosts;\n    }\n    calculateMonthlyIncome() {\n        return this.rentals.reduce((total, rental) => rental.monthlyIncome + total, 0);\n    }\n    calculateMonthlyProfit(useTeaserRate = false) {\n        return this.calculateMonthlyIncome() - this.calculateMonthlyCost(useTeaserRate);\n    }\n    static fromJson(json) {\n        const property = Object.create(Property.prototype);\n        return Object.assign(property, json, {\n            finances: json.finances.map((financeObject) => {\n                return Finance.fromJson(financeObject);\n            }),\n            payments: json.payments.map((paymentObject) => {\n                return Payment.fromJson(paymentObject);\n            }),\n            rentals: json.rentals.map((rentalObject) => {\n                return Rental.fromJson(rentalObject);\n            })\n        });\n    }\n    static reviver(key, value) {\n        return key === \"\" ? Property.fromJson(value) : value;\n    }\n}\n","import React from 'react';\nimport './App.scss';\nimport PropertySummaries from \"./components/PropertySummaries\";\nimport FullSummary from \"./components/FullSummary\";\nimport AddProperty from \"./components/AddProperty\";\nimport {Finance, Payment, Property, Rental} from \"@votemike/property\";\n\nfunction App() {\n  const updatePropertySchema = property => {\n    return {\n      name: property.name,\n      finances: [\n        {\n          amount: parseFloat(property.mortgage),\n          repayment: !property.interestOnly,\n          length: parseFloat(property.monthsLeft) / 12,\n          rate: parseFloat(property.baseRate),\n          teaserRate: parseFloat(property.teaserRate),\n          fees: []\n        }\n      ],\n      rentals: [\n        {\n          lettingFee: 0,\n          monthlyRent: property.income\n        }\n      ],\n      payments: []\n    };\n  };\n\n  const useStateWithLocalStorage = (storageKey, defaultValue) => {\n    let initialProperties = defaultValue;\n    if (localStorage.getItem(storageKey)) {\n      initialProperties = JSON.parse(localStorage.getItem(storageKey)).map((property) => {\n        if (property.interestOnly !== undefined) {\n          alert(`${property.name} has been updated. Please double check the details are still correct`);\n          property = updatePropertySchema(property);\n        }\n        return Property.fromJson(property);\n      });\n    }\n    const [name, setter] = React.useState(initialProperties);\n\n    React.useEffect(() => {\n      localStorage.setItem(storageKey, JSON.stringify(name));\n    }, [name, storageKey]);\n\n    return [name, setter];\n  };\n  const [properties, setProperties] = useStateWithLocalStorage('properties', []);\n\n  const addPropertyHandler = formState => {\n    const finances = [new Finance(parseFloat(formState.mortgage), !formState.interestOnly, parseInt(formState.monthsLeft) / 12, parseFloat(formState.baseRate), [], parseFloat(formState.teaserRate))];\n    const payments = [new Payment(parseFloat(formState.expenses), 'monthly')];\n    const rentals = [new Rental(parseFloat(formState.rent), parseFloat(formState.fee))];\n\n    const property = new Property(formState.name, finances, payments, rentals);\n    setProperties([...properties, property]);\n  };\n\n  const removePropertyHandler = index => {\n    const newProperties = [...properties];\n    newProperties.splice(index, 1);\n    setProperties(newProperties);\n  };\n\n  return (\n    <>\n      <div className=\"stress-test\">\n        <header>\n          <h1 className=\"title is-1\">Mortgage Stress Test</h1>\n          <p>What would happen if interest and mortgage rates went up?<br/>What if you couldn't remortgage once your introductory rate ran out?</p>\n          <p>This stress test is provided as a rough guide only. You should not base any decisions solely on it.</p>\n        </header>\n        <PropertySummaries properties={properties} removePropertyHandler={removePropertyHandler}/>\n        <FullSummary properties={properties}/>\n        <AddProperty addPropertyHandler={addPropertyHandler}/>\n      </div>\n      <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n          <p>Created by <a href=\"https://votemike.co.uk\">Michael Gwynne</a></p>\n          <p>You may also like <a href=\"https://votemike.github.io/amortisation-calculator/\">Amortisation Calculator</a></p>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}