{"version":3,"sources":["utilities/calculators.js","utilities/formatters.js","components/CollapsableWidget.js","components/PropertySummary.jsx","components/PropertySummaries.js","components/FullSummary.js","components/AddProperty.js","App.js","serviceWorker.js","index.js"],"names":["getCurrentMonthlyCost","property","teaserRate","getMonthlyCost","getFullMonthlyCost","getCurrentNetIncome","income","toFixed","baseRate","rate","monthlyInterestRate","interestOnly","mortgage","pow","Math","monthsLeft","getNetIncome","formatter","Intl","NumberFormat","style","currency","formatCurrency","amount","format","CollapsableWidget","props","state","collapsed","className","onClick","setState","this","heading","renderKeyInfoItems","renderBlurb","children","Object","entries","keyInfoItems","map","key","value","React","Component","PropertySummary","line1","name","line2","push","para1","join","span1","href","target","rel","span2","para2","removePropertyHandler","index","mortgageCost","profit","keyInfo","renderDeleteButton","PropertySummaries","properties","FullSummary","teaserTotal","forEach","total","incomeTotal","mortgageTotal","parseFloat","getPropertyCurrentTotal","getPropertyFullTotal","getPropertyCurrentIncome","getPropertyProperIncome","getPropertyTotal","getNetIncomeTotal","length","properProfit","getTotalMortgageDebt","AddProperty","getInitialFormState","handleInputChange","bind","handleSubmit","event","type","checked","preventDefault","addPropertyHandler","Fragment","onSubmit","onChange","placeholder","required","step","min","disabled","id","App","storageKey","defaultValue","useState","JSON","parse","localStorage","getItem","setter","useEffect","setItem","stringify","useStateWithLocalStorage","setProperties","newProperties","splice","formState","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.009741e7.chunk.js","sourcesContent":["const getCurrentMonthlyCost = property => {\n  if (property.teaserRate) {\n    return getMonthlyCost(property, property.teaserRate);\n  }\n\n  return getFullMonthlyCost(property);\n};\n\nconst getCurrentNetIncome = property => {\n  return +(property.income - getCurrentMonthlyCost(property)).toFixed(2);\n};\n\nconst getFullMonthlyCost = property => {\n  return getMonthlyCost(property, property.baseRate);\n};\n\nconst getMonthlyCost = (property, rate) => {\n  const monthlyInterestRate = rate / 12 / 100;\n  if (property.interestOnly) {\n    return +(property.mortgage * monthlyInterestRate).toFixed(2);\n  }\n  // M = P [ i(1 + i)^n ] / [ (1 + i)^n – 1]\n  const pow = Math.pow((monthlyInterestRate + 1), property.monthsLeft);\n  return +(property.mortgage * ((monthlyInterestRate * pow) / (pow - 1))).toFixed(2);\n};\n\nconst getNetIncome = (property, rate) => {\n  return +(property.income - getMonthlyCost(property, rate)).toFixed(2);\n};\n\nexport {\n  getCurrentMonthlyCost,\n  getCurrentNetIncome,\n  getFullMonthlyCost,\n  getMonthlyCost,\n  getNetIncome\n};\n","const formatter = new Intl.NumberFormat('en-GB', {style: 'currency', currency: 'GBP'});\nconst formatCurrency = amount => {\n  return formatter.format(amount)\n};\n\nexport {\n  formatCurrency\n};\n","import React from 'react';\n\nclass CollapsableWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {collapsed: true};\n  }\n\n  render() {\n    return (\n      <div className='collapsable'>\n        <h2 className='collapsable-toggle title is-3' onClick={() => this.setState(state => ({collapsed: !state.collapsed}))}>{this.props.heading}</h2>\n        <div className='collapsable-key-info collapsable-toggle' onClick={() => this.setState(state => ({collapsed: !state.collapsed}))}>\n          {this.renderKeyInfoItems()}\n        </div>\n        {this.renderBlurb()}\n      </div>\n    );\n  }\n\n  renderBlurb() {\n    if (!this.state.collapsed) {\n      return this.props.children;\n    }\n  }\n\n  renderKeyInfoItems() {\n    return Object.entries(this.props.keyInfoItems).map(([key, value]) => {\n      return <div key={`${this.props.heading}-${key}`}><span className='collapsable-key-info-label'>{key}:</span> {value}</div>;\n    });\n  }\n}\n\nexport default CollapsableWidget;\n\n","import React from 'react';\nimport { getCurrentMonthlyCost, getCurrentNetIncome, getFullMonthlyCost, getMonthlyCost, getNetIncome } from '../utilities/calculators';\nimport { formatCurrency } from '../utilities/formatters';\nimport CollapsableWidget from \"./CollapsableWidget\";\n\nclass PropertySummary extends React.Component {\n  renderBlurb() {\n    const line1 = [`The mortgage for ${this.props.property.name} currently costs around ${formatCurrency(getCurrentMonthlyCost(this.props.property))} each month.`];\n    const line2 = [`After mortgage repayments, your current income from the property is around ${formatCurrency(getCurrentNetIncome(this.props.property))} each month.`];\n\n    if (this.props.property.teaserRate) {\n      line1.push(`When the teaser rate expires, it is expected that this will rise to ${formatCurrency(getFullMonthlyCost(this.props.property))}, ${formatCurrency(getFullMonthlyCost(this.props.property) - getCurrentMonthlyCost(this.props.property))} more than your current repayments.`);\n      line2.push(`When the teaser rate expires that will be nearer to ${formatCurrency(getNetIncome(this.props.property, this.props.property.baseRate))}.`);\n    }\n    const para1 = <p className='summary-line'>{line1.join(' ')}<br/>{line2.join(' ')}</p>;\n\n    if (this.props.property.baseRate >= 15) {\n      return para1;\n    }\n\n    const span1 = <span>If interest rates were to rise to 10% (<a href=\"https://www.purecommercialfinance.co.uk/news/a-brief-history-of-average-mortgage-interest-rates/\" target=\"_blank\" rel=\"noopener noreferrer\">similar to rates around 1995</a>), then the mortgage would cost {formatCurrency(getMonthlyCost(this.props.property, 10))} each month, {formatCurrency(getMonthlyCost(this.props.property, 10) - getCurrentMonthlyCost(this.props.property))} more that your current repayments. If rates were this high, your monthly income will be nearer to {formatCurrency(getNetIncome(this.props.property, 10))}.</span>;\n    let span2 = null;\n    if (this.props.property.baseRate < 10) {\n      span2 = <span>If interest rates were to rise to 15% (<a href=\"https://www.purecommercialfinance.co.uk/news/a-brief-history-of-average-mortgage-interest-rates/\" target=\"_blank\" rel=\"noopener noreferrer\">similar to rates around 1980</a>), then the mortgage would cost {formatCurrency(getMonthlyCost(this.props.property, 15))} each month, {formatCurrency(getMonthlyCost(this.props.property, 15) - getCurrentMonthlyCost(this.props.property))} more that your current repayments. If rates were this high, your monthly income will be nearer to {formatCurrency(getNetIncome(this.props.property, 15))}.</span>;\n    }\n\n    const para2 = <p className='summary-line'>{span1}{span2 && (<><br/>{span2}</>)}</p>;\n\n    return <>{para1}{para2}</>;\n  }\n\n  renderDeleteButton() {\n    return <button className='remove-property' onClick={() => this.props.removePropertyHandler(this.props.index)}>Remove Property</button>;\n  }\n\n  render() {\n    let mortgageCost = formatCurrency(getCurrentMonthlyCost(this.props.property));\n    let profit = formatCurrency(getCurrentNetIncome(this.props.property));\n\n    if (this.props.property.teaserRate) {\n      mortgageCost = `${mortgageCost} (${formatCurrency(getFullMonthlyCost(this.props.property))})`;\n      profit = `${profit} (${formatCurrency(getNetIncome(this.props.property, this.props.property.baseRate))})`;\n    }\n\n    const keyInfo = {\n      'Mortgage Cost': `${mortgageCost} per month`,\n      'Pre-Mortgage Profit': `${formatCurrency(this.props.property.income)} per month`,\n      'Post-Mortgage Profit': `${profit} per month`\n    };\n\n    return (\n      <CollapsableWidget heading={this.props.property.name} keyInfoItems={keyInfo}>\n        {this.renderBlurb()}\n        {this.renderDeleteButton()}\n      </CollapsableWidget>\n    );\n  }\n}\n\nexport default PropertySummary;\n","import React from 'react';\nimport PropertySummary from \"./PropertySummary\";\n\nconst PropertySummaries = ({properties, removePropertyHandler}) => (\n  <div>\n    {properties.map((property, index) => (\n      <PropertySummary key={property.name} index={index} property={property} removePropertyHandler={removePropertyHandler}/>\n    ))}\n  </div>\n);\n\nexport default PropertySummaries\n","import React from 'react';\nimport CollapsableWidget from './CollapsableWidget';\nimport { getCurrentMonthlyCost, getCurrentNetIncome, getFullMonthlyCost, getMonthlyCost, getNetIncome } from '../utilities/calculators';\nimport { formatCurrency } from '../utilities/formatters';\n\nclass FullSummary extends React.Component {\n  getPropertyCurrentTotal() {\n    let teaserTotal = 0;\n    this.props.properties.forEach(property =>  {\n      teaserTotal += getCurrentMonthlyCost(property);\n    });\n    return teaserTotal;\n  }\n\n  getPropertyFullTotal() {\n    let total = 0;\n    this.props.properties.forEach(property => {\n      total += getFullMonthlyCost(property);\n    });\n    return total;\n  }\n\n  getPropertyTotal(rate) {\n    let total = 0;\n    this.props.properties.forEach(property => {\n      total += getMonthlyCost(property, rate);\n    });\n    return total;\n  }\n\n  getNetIncomeTotal(rate) {\n    let incomeTotal = 0;\n    this.props.properties.forEach(property => {\n      incomeTotal += getNetIncome(property, rate);\n    });\n    return incomeTotal;\n  }\n\n  getPropertyCurrentIncome() {\n    let incomeTotal = 0;\n    this.props.properties.forEach(property => {\n      incomeTotal += getCurrentNetIncome(property);\n    });\n    return incomeTotal;\n  }\n\n  getPropertyProperIncome() {\n    let incomeTotal = 0;\n    this.props.properties.forEach(property => {\n      incomeTotal += getNetIncome(property, property.baseRate);\n    });\n    return incomeTotal;\n  }\n\n  getTotalMortgageDebt() {\n    let mortgageTotal = 0;\n    this.props.properties.forEach(property => {\n      mortgageTotal += parseFloat(property.mortgage);\n    });\n    return mortgageTotal;\n  }\n\n  renderBlurb() {\n    return (\n      <>\n        <p>\n          Your current monthly payments are around {formatCurrency(this.getPropertyCurrentTotal())}. This will increase to\n          around {formatCurrency(this.getPropertyFullTotal())} (<span\n          className=\"text-warning\">+{formatCurrency(this.getPropertyFullTotal() - this.getPropertyCurrentTotal())}</span>) once\n          any/all teaser rates have expired.<br/>\n          Your monthly net income is around {formatCurrency(this.getPropertyCurrentIncome())}. This will change by {formatCurrency(this.getPropertyProperIncome() - this.getPropertyCurrentIncome())} to around {formatCurrency(this.getPropertyProperIncome())} once any/all teaser rates have expired.\n        </p>\n        <p>\n          <span>If interest rates were to rise to 10%: (<a href=\"https://www.purecommercialfinance.co.uk/news/a-brief-history-of-average-mortgage-interest-rates/\" target=\"_blank\" rel=\"noopener noreferrer\">similar to rates around 1995</a>), then the mortgages would total {formatCurrency(this.getPropertyTotal(10))} each month, {formatCurrency(this.getPropertyTotal(10) - this.getPropertyCurrentTotal())} more that your current repayments. If rates were this high, your monthly income will be nearer to {formatCurrency(this.getNetIncomeTotal(10))}.</span><br/>\n          <span>If interest rates were to rise to 15%: (<a href=\"https://www.purecommercialfinance.co.uk/news/a-brief-history-of-average-mortgage-interest-rates/\" target=\"_blank\" rel=\"noopener noreferrer\">similar to rates around 1980</a>), then the mortgages would total {formatCurrency(this.getPropertyTotal(15))} each month, {formatCurrency(this.getPropertyTotal(15) - this.getPropertyCurrentTotal())} more that your current repayments. If rates were this high, your monthly income will be nearer to {formatCurrency(this.getNetIncomeTotal(15))}.</span>\n        </p>\n        </>\n    );\n  }\n\n  render() {\n    if (this.props.properties.length < 1) {\n      return null;\n    }\n\n    const properProfit = formatCurrency(this.getPropertyProperIncome());\n    let profit = formatCurrency(this.getPropertyCurrentIncome());\n\n    if (profit !== properProfit) {\n      profit = `${profit} (${properProfit})`\n    }\n\n    const keyInfo = {\n      'Total Mortgage Debt': formatCurrency(this.getTotalMortgageDebt()),\n      'Mortgage Costs': `${formatCurrency(this.getPropertyCurrentTotal())} per month`,\n      'Post-Mortgage Profit': `${profit} per month`\n    };\n\n    return (\n      <CollapsableWidget heading='Summary' keyInfoItems={keyInfo}>\n        {this.renderBlurb()}\n      </CollapsableWidget>\n    );\n  }\n}\n\nexport default FullSummary;\n","import React from 'react';\n\nclass AddProperty extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialFormState();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getInitialFormState() {\n    return {name: '', interestOnly: false, mortgage: '', baseRate: '', monthsLeft: '', teaserRate: '', income: ''};\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({[name]: value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addPropertyHandler(this.state);\n    this.setState(this.getInitialFormState());\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2 className=\"title is-3\">Add a Property</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Property Name</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"name\" value={this.state.name} onChange={this.handleInputChange} placeholder=\"10 Downing Street\" required/>\n                </div>\n                <p className=\"help\">\n                  Give this property a label\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Mortgage amount</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"mortgage\" value={this.state.mortgage} onChange={this.handleInputChange} type=\"number\" placeholder=\"300000\" step=\"any\" min=\"0\" required/>\n                </div>\n                <p className=\"help\">\n                  The outstanding amount of the loan\n                </p>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <label className=\"checkbox\">\n                    <input name=\"interestOnly\" checked={this.state.interestOnly} onChange={this.handleInputChange} type=\"checkbox\"/> Interest only\n                  </label>\n                </div>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"monthsLeft\" value={this.state.monthsLeft} onChange={this.handleInputChange} type=\"number\" placeholder=\"300\" step=\"1\" min=\"0\" disabled={this.state.interestOnly} required={!this.state.interestOnly}/>\n                </div>\n                <p className=\"help\">\n                  Months left on the mortgage\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Rate</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"baseRate\" value={this.state.baseRate} onChange={this.handleInputChange} type=\"number\" placeholder=\"4.95\" step=\"any\" required/>\n                </div>\n                <p className=\"help\">\n                  The interest rate of the loan (ignoring any teaser rate)\n                </p>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"teaserRate\" value={this.state.teaserRate} onChange={this.handleInputChange} type=\"number\" placeholder=\"2.19\" step=\"any\"/>\n                </div>\n                <p className=\"help\">\n                  Any introductory/teaser rate the loan may have\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Income</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"income\" value={this.state.income} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"810\" id=\"income\" required/>\n                </div>\n                <p className=\"help\">\n                  Monthly Net Income after fees, maintenance and taxes but before mortgage payments\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label\"/>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <button type=\"submit\" className=\"button is-primary\">\n                    Add Property\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddProperty\n","import React from 'react';\nimport './App.scss';\nimport PropertySummaries from \"./components/PropertySummaries\";\nimport FullSummary from \"./components/FullSummary\";\nimport AddProperty from \"./components/AddProperty\";\n\nfunction App() {\n  const useStateWithLocalStorage = (storageKey, defaultValue) => {\n    const [name, setter] = React.useState(JSON.parse(localStorage.getItem(storageKey)) || defaultValue);\n\n    React.useEffect(() => {\n      localStorage.setItem(storageKey, JSON.stringify(name));\n    }, [name, storageKey]);\n\n    return [name, setter];\n  };\n  const [properties, setProperties] = useStateWithLocalStorage('properties', []);\n\n  const addPropertyHandler = formState => {\n    setProperties([...properties, {...formState}]);\n  };\n\n  const removePropertyHandler = index => {\n    const newProperties = [...properties];\n    newProperties.splice(index, 1);\n    setProperties(newProperties);\n  };\n\n  return (\n    <>\n      <div className=\"stress-test\">\n        <header>\n          <h1 className=\"title is-1\">Mortgage Stress Test</h1>\n          <p>What would happen if interest and mortgage rates went up?<br/>What if you couldn't remortgage once your introductory rate ran out?</p>\n          <p>This stress test is provided as a rough guide only. You should not base any decisions solely on it.</p>\n        </header>\n        <PropertySummaries properties={properties} removePropertyHandler={removePropertyHandler}/>\n        <FullSummary properties={properties}/>\n        <AddProperty addPropertyHandler={addPropertyHandler}/>\n      </div>\n      <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n          <p>Created by <a href=\"https://votemike.co.uk\">Michael Gwynne</a></p>\n          <p>You may also like <a href=\"https://votemike.github.io/amortisation-calculator/\">Amortisation Calculator</a></p>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}