{"version":3,"sources":["components/PropertySummary.jsx","components/PropertySummaries.js","components/FullSummary.js","components/AddProperty.js","App.js","serviceWorker.js","index.js"],"names":["PropertySummary","index","property","removePropertyHandler","getCurrentMonthlyCost","teaserRate","getMonthlyCost","baseRate","getFullMonthlyCost","getNetIncome","rate","income","toFixed","format","amount","Intl","NumberFormat","style","currency","monthlyInterestRate","interestOnly","mortgage","pow","Math","monthsLeft","title","name","aria-label","className","onClick","line1","line2","getCurrentNetIncome","push","para1","join","span1","href","target","rel","span2","para2","PropertySummaries","properties","map","key","FullSummary","getPropertyCurrentTotal","teaserTotal","forEach","getPropertyFullTotal","total","getPropertyTotal","getNetIncomeTotal","incomeTotal","getPropertyCurrentIncome","getPropertyProperIncome","length","AddProperty","props","state","getInitialFormState","handleInputChange","bind","handleSubmit","event","value","type","checked","this","setState","preventDefault","addPropertyHandler","monthsLeftInput","onChange","placeholder","min","step","required","Fragment","onSubmit","htmlFor","id","React","Component","App","storageKey","defaultValue","useState","JSON","parse","localStorage","getItem","setter","useEffect","setItem","stringify","useStateWithLocalStorage","setProperties","newProperties","splice","formState","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.02018fdc.chunk.js","sourcesContent":["import React from 'react';\n\nconst PropertySummary = ({index, property, removePropertyHandler}) => {\n  function getCurrentMonthlyCost(property) {\n    if (property.teaserRate) {\n      return getMonthlyCost(property, property.teaserRate);\n    } else {\n      return getMonthlyCost(property, property.baseRate);\n    }\n  }\n\n  function getCurrentNetIncome(property) {\n    return +(property.income - getCurrentMonthlyCost(property)).toFixed(2);\n  }\n\n  function getFullMonthlyCost(property) {\n    return getMonthlyCost(property, property.baseRate);\n  }\n\n  function getNetIncome(property, rate) {\n    return +(property.income - getMonthlyCost(property, rate)).toFixed(2);\n  }\n\n  function format(amount) {\n    return new Intl.NumberFormat('en-GB', {\n      style: 'currency',\n      currency: 'GBP'\n    }).format(amount)\n  }\n\n  function getMonthlyCost(property, rate) {\n    const monthlyInterestRate = rate / 12 / 100;\n    if (property.interestOnly) {\n      return +(property.mortgage * monthlyInterestRate).toFixed(2);\n    }\n    // M = P [ i(1 + i)^n ] / [ (1 + i)^n – 1]\n    const pow = Math.pow((monthlyInterestRate + 1), property.monthsLeft);\n    return +(property.mortgage * ((monthlyInterestRate * pow) / (pow - 1))).toFixed(2);\n  }\n\n  const title = <><h2>{ property.name }</h2><button aria-label=\"Remove Todo\" className='remove' onClick={() => removePropertyHandler(index)}></button></>;\n  const line1 = [`The mortgage for ${property.name} currently costs around ${format(getCurrentMonthlyCost(property))} each month.`];\n  const line2 = [`After mortgage repayments, your current income from the property is around ${format(getCurrentNetIncome(property))} each month.`];\n\n  if (property.teaserRate) {\n    line1.push(`When the teaser rate expires, it is expected that this will rise to ${format(getFullMonthlyCost(property))}, ${format(getFullMonthlyCost(property) - getCurrentMonthlyCost(property))} more than your current repayments.`);\n    line2.push(`When the teaser rate expires that will be nearer to ${format(getNetIncome(property, property.baseRate))}.`);\n  }\n  const para1 = <p>{line1.join(' ')}<br/>{line2.join(' ')}</p>;\n\n\n  if (property.baseRate >= 15) {\n    return <>{title}{para1}</>;\n  }\n\n  const span1 = <span>If interest rates were to rise to 10% (<a href=\"http://www.bankofengland.co.uk/statistics/Documents/articles/2015/6jul.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">similar to rates around 1980</a>), then the mortgage would cost {format(getMonthlyCost(property, 10))} each month, {format(getMonthlyCost(property, 10) - getCurrentMonthlyCost(property))} more that your current repayments. If rates were this high, your monthly income will be nearer to {format(getNetIncome(property, 10))}.</span>;\n  let span2 = null;\n  if (property.baseRate < 10) {\n    span2 = <span>If interest rates were to rise to 15% (<a href=\"http://www.bankofengland.co.uk/statistics/Documents/articles/2015/6jul.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">similar to rates around 1995</a>), then the mortgage would cost {format(getMonthlyCost(property, 15))} each month, {format(getMonthlyCost(property, 15) - getCurrentMonthlyCost(property))} more that your current repayments. If rates were this high, your monthly income will be nearer to {format(getNetIncome(property, 15))}.</span>;\n  }\n\n  const para2 = <p>{span1}{span2 && (<><br/>{span2}</>)}</p>;\n\n  return <>{title}{para1}{para2}</>;\n};\n\nexport default PropertySummary;\n","import React from 'react';\nimport PropertySummary from \"./PropertySummary\";\n\nconst PropertySummaries = ({properties, removePropertyHandler}) => (\n  <div>\n    {properties.map((property, index) => (\n      <PropertySummary key={index} index={index} property={property} removePropertyHandler={removePropertyHandler}/>\n    ))}\n  </div>\n);\n\nexport default PropertySummaries\n","import React from 'react';\n\nconst FullSummary = ({properties}) => {\n  function getPropertyCurrentTotal(properties) {\n    let teaserTotal = 0;\n    properties.forEach(function (property) {\n      teaserTotal += getCurrentMonthlyCost(property);\n    });\n    return teaserTotal;\n  }\n\n  function getPropertyFullTotal(properties) {\n    let total = 0;\n    properties.forEach(function (property) {\n      total += getFullMonthlyCost(property);\n    });\n    return total;\n  }\n\n  function getFullMonthlyCost(property) {\n    return getMonthlyCost(property, property.baseRate);\n  }\n\n  function getPropertyTotal(properties, rate) {\n    let total = 0;\n    properties.forEach(function (property) {\n      total += getMonthlyCost(property, rate);\n    });\n    return total;\n  }\n\n  function getCurrentMonthlyCost(property) {\n    if (property.teaserRate) {\n      return getMonthlyCost(property, property.teaserRate);\n    } else {\n      return getMonthlyCost(property, property.baseRate);\n    }\n  }\n\n  function getMonthlyCost(property, rate) {\n    const monthlyInterestRate = rate / 12 / 100;\n    if (property.interestOnly) {\n      return +(property.mortgage * monthlyInterestRate).toFixed(2);\n    }\n    // M = P [ i(1 + i)^n ] / [ (1 + i)^n – 1]\n    const pow = Math.pow((monthlyInterestRate + 1), property.monthsLeft);\n    return +(property.mortgage * ((monthlyInterestRate * pow) / (pow - 1))).toFixed(2);\n  }\n\n  function getNetIncomeTotal(properties, rate) {\n    let incomeTotal = 0;\n    properties.forEach(function (property) {\n      incomeTotal += getNetIncome(property, rate);\n    });\n    return incomeTotal;\n  }\n\n  function getNetIncome(property, rate) {\n    return +(property.income - getMonthlyCost(property, rate)).toFixed(2);\n  }\n\n  function getCurrentNetIncome(property) {\n    return +(property.income - getCurrentMonthlyCost(property)).toFixed(2);\n  }\n\n  function getPropertyCurrentIncome(properties) {\n    let incomeTotal = 0;\n    properties.forEach(function (property) {\n      incomeTotal += getCurrentNetIncome(property);\n    });\n    return incomeTotal;\n  }\n\n  function getPropertyProperIncome(properties) {\n    let incomeTotal = 0;\n    properties.forEach(function (property) {\n      incomeTotal += getNetIncome(property, property.baseRate);\n    });\n    return incomeTotal;\n  }\n\n  function format(amount) {\n    return new Intl.NumberFormat('en-GB', {\n      style: 'currency',\n      currency: 'GBP'\n    }).format(amount)\n  }\n\n  if (properties.length < 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <h2>Summary</h2>\n      <p>\n        Your current monthly payments are around {format(getPropertyCurrentTotal(properties))}. This will increase to\n        around {format(getPropertyFullTotal(properties))} (<span\n        className=\"text-warning\">+{format(getPropertyFullTotal(properties) - getPropertyCurrentTotal(properties))}</span>) once\n        any/all teaser rates have expired.<br/>\n        Your monthly net income is around {format(getPropertyCurrentIncome(properties))}. This will change by {format(getPropertyProperIncome(properties) - getPropertyCurrentIncome(properties))} to around {format(getPropertyProperIncome(properties))} once any/all teaser rates have expired.\n      </p>\n      <p>\n        <span>If interest rates were to rise to 10%: (<a href=\"https://www.purecommercialfinance.co.uk/news/a-brief-history-of-average-mortgage-interest-rates/\" target=\"_blank\" rel=\"noopener noreferrer\">similar to rates around 1980</a>), then the mortgages would total {format(getPropertyTotal(properties, 10))} each month, {format(getPropertyTotal(properties, 10) - getPropertyCurrentTotal(properties))} more that your current repayments. If rates were this high, your monthly income will be nearer to {format(getNetIncomeTotal(properties, 10))}.</span><br/>\n        <span>If interest rates were to rise to 15%: (<a href=\"https://www.purecommercialfinance.co.uk/news/a-brief-history-of-average-mortgage-interest-rates/\" target=\"_blank\" rel=\"noopener noreferrer\">similar to rates around 1995</a>), then the mortgages would total {format(getPropertyTotal(properties, 15))} each month, {format(getPropertyTotal(properties, 15) - getPropertyCurrentTotal(properties))} more that your current repayments. If rates were this high, your monthly income will be nearer to {format(getNetIncomeTotal(properties, 15))}.</span>\n      </p>\n    </>\n  )\n};\n\nexport default FullSummary;\n","import React from 'react';\n\nclass AddProperty extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialFormState();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getInitialFormState() {\n    return {name: '', interestOnly: false, mortgage: '', baseRate: '', monthsLeft: '', teaserRate: '', income: ''};\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({[name]: value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addPropertyHandler(this.state);\n    this.setState(this.getInitialFormState());\n  }\n\n  render() {\n    const monthsLeftInput = this.state.interestOnly ? null : <div className=\"field\"><input name=\"monthsLeft\" value={this.state.monthsLeft} onChange={this.handleInputChange} type=\"number\" placeholder=\"Length (Months)\" min=\"0\" step=\"6\" required/></div>;\n    return (\n      <React.Fragment>\n        <h2>Add a Property</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            <div className=\"field\">\n              <input name=\"name\" value={this.state.name} onChange={this.handleInputChange} placeholder=\"Property Name\" required/>\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"interestOnly\">Interest only\n                <input name=\"interestOnly\" checked={this.state.interestOnly} onChange={this.handleInputChange} type=\"checkbox\"/>\n              </label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"field\">\n              <input name=\"mortgage\" value={this.state.mortgage} onChange={this.handleInputChange} type=\"number\" placeholder=\"Mortgage\" step=\"any\" min=\"0\" required/>\n            </div>\n            <div className=\"field\">\n              <input name=\"baseRate\" value={this.state.baseRate} onChange={this.handleInputChange} type=\"number\" placeholder=\"Base rate\" step=\"any\" required/>\n            </div>\n            {monthsLeftInput}\n            <div className=\"field\">\n              <input name=\"teaserRate\" value={this.state.teaserRate} onChange={this.handleInputChange} type=\"number\" placeholder=\"Teaser rate\" step=\"any\"/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"field\">\n              <input name=\"income\" value={this.state.income} onChange={this.handleInputChange} placeholder=\"Income\" id=\"income\" required/>\n            </div>\n            <div className=\"income-label\">\n              <label htmlFor=\"income\">(Monthly Net Income after fees, maintenance and taxes but before mortgage payments)</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"field\">\n              <input type=\"submit\" value=\"Add Property\"/>\n            </div>\n          </div>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddProperty\n","import React from 'react';\nimport './App.scss';\nimport PropertySummaries from \"./components/PropertySummaries\";\nimport FullSummary from \"./components/FullSummary\";\nimport AddProperty from \"./components/AddProperty\";\n\nfunction App() {\n  const useStateWithLocalStorage = (storageKey, defaultValue) => {\n    const [name, setter] = React.useState(JSON.parse(localStorage.getItem(storageKey)) || defaultValue);\n\n    React.useEffect(() => {\n      localStorage.setItem(storageKey, JSON.stringify(name));\n    }, [name, storageKey]);\n\n    return [name, setter];\n  };\n  const [properties, setProperties] = useStateWithLocalStorage('properties', []);\n\n  const addPropertyHandler = formState => {\n    setProperties([...properties, {...formState}]);\n  };\n\n  const removePropertyHandler = index => {\n    const newProperties = [...properties];\n    newProperties.splice(index, 1);\n    setProperties(newProperties);\n  };\n\n  return (\n    <>\n      <div className=\"stress-test\">\n        <header>\n          <h1>Mortgage Stress Test</h1>\n          <p>This stress test is provided as a rough guide only. You should not base any decisions solely on it.</p>\n          <p>It is currently a work in progress.</p>\n        </header>\n        <PropertySummaries properties={properties} removePropertyHandler={removePropertyHandler}/>\n        <FullSummary properties={properties}/>\n        <AddProperty addPropertyHandler={addPropertyHandler}/>\n      </div>\n      <footer>\n        <p>Created by <a href=\"https://www.votemike.co.uk\">Michael Gwynne</a></p>\n        <p>You may also like <a href=\"https://votemike.github.io/amortisation-calculator/\">Amortisation Calculator</a></p>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}